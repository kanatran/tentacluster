# This is a basic workflow that is manually triggered

name: Load Streams

on:
  schedule:
    - cron: '*/10 * * * *'
  workflow_dispatch:
    # inputs:
    #   actionIndex:
    #     description: 'Action index'
    #     default: 0
    #     required: false

jobs:
  load-streams:
    continue-on-error: true
    # 4269
    timeout-minutes: 10
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        machine: ["0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99"]
        # let items = []
        # for (let i = 0; i < 250; i++) {
        #   items.push(i.toString())
        # }
        # JSON.stringify(items)
        # "100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249"
      fail-fast: false
    env:
      DISPLAY: ":0"
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '12'
    - name: Setup xvfb (Linux)
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xinput0 libxcb-xfixes0 alsa-utils mpv jq
        sudo /usr/bin/Xvfb $DISPLAY -screen 0 1280x1024x24 &
    - name: Get Chrome
      run: |
        wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
        sudo dpkg -i ./google-chrome-stable_current_amd64.deb
        google-chrome --version
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    # - uses: actions/setup-node@v2
    #   with:
    #     node-version: '12'
    # - name: npm install
    #   run: |
    #     npm install
    - name: Update youtube-dl
      run: |
        # sudo youtube-dl -U
        sudo apt remove -y youtube-dl
        sudo wget https://yt-dl.org/latest/youtube-dl -O /usr/bin/youtube-dl || sleep 10 && sudo wget https://yt-dl.org/latest/youtube-dl -O /usr/bin/youtube-dl
        sudo chmod a+x /usr/bin/youtube-dl
        youtube-dl --version
    - name: Install python dependencies
      run: |
        python3 -m pip install -r requirements.txt
        export ACTUAL_PYTHON=$(which python3)
        echo $ACTUAL_PYTHON
        echo $(which python3)
    # - name: Clone Julius
    #   run: |
    #     git clone https://github.com/julius-speech/dictation-kit
    - uses: n1hility/cancel-previous-runs@v2
      with: 
        token: ${{ secrets.WORKFLOW_TOKEN }}
        workflow: load-streams.yml
    - name: Set up PulseAudio and run script
      run: |
        chmod +x ./scripts/*.sh
        sudo sh ./scripts/initpulse.sh $(whoami) ${{ matrix.machine }} $USER $(which python3) ${{ secrets.BOT_ACCESS_TOKEN }} 0
        # Action index: ${{ github.event.inputs.actionIndex }}
    - name: After running
      run: |
        # node runner/index.js ${{ matrix.machine }}
        # sudo sh ./scripts/run-runner.sh ${{ matrix.machine }}
        # echo Skip sleeping for ${{ github.event.inputs.sleeptime }} seconds
        echo Machine ${{ matrix.machine }} finished
    - uses: actions/upload-artifact@v2
      with:
        name: output.wav
        path: output.wav
